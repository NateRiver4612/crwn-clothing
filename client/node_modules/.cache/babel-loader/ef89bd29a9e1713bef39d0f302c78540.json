{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTION_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTION_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = collections => {\n  return dispatch => {\n    const collectionRef = firestore.collection(collections);\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/Admin/crwn-clothing/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTION_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTION_FAILURE","fetchCollectionsStartAsync","collections","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAmBC,+BAAnB,QAA0D,+BAA1D;AAGA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,cAAD,KAAmB;AACxDH,EAAAA,IAAI,EAACJ,eAAe,CAACQ,wBADmC;AAExDC,EAAAA,OAAO,EAACF;AAFgD,CAAnB,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAiB;AACtDP,EAAAA,IAAI,EAACJ,eAAe,CAACY,wBADiC;AAEtDH,EAAAA,OAAO,EAACE;AAF8C,CAAjB,CAAhC;AAKP,OAAO,MAAME,0BAA0B,GAAIC,WAAD,IAAgB;AACxD,SAAOC,QAAQ,IAAE;AACf,UAAMC,aAAa,GAAGf,SAAS,CAACgB,UAAV,CAAqBH,WAArB,CAAtB;AAEAC,IAAAA,QAAQ,CAACZ,qBAAqB,EAAtB,CAAR;AAEAa,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAY;AACnC,YAAMb,cAAc,GAAGL,+BAA+B,CAACkB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACT,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACD,KAHD,EAGGc,KAHH,CAGSC,KAAK,IAAEP,QAAQ,CAACL,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAHxB;AAID,GATD;AAUD,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport { firestore,convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\r\n\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: ShopActionTypes.FETCH_COLLECTION_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (collectionsMap)=>({\r\n  type:ShopActionTypes.FETCH_COLLECTION_SUCCESS,\r\n  payload:collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure = (errorMessage)=>({\r\n  type:ShopActionTypes.FETCH_COLLECTION_FAILURE,\r\n  payload:errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = (collections) =>{\r\n  return dispatch=>{\r\n    const collectionRef = firestore.collection(collections);\r\n    \r\n    dispatch(fetchCollectionsStart()); \r\n\r\n    collectionRef.get().then((snapshot)=>{\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n      dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    }).catch(error=>dispatch(fetchCollectionsFailure(error.message)))\r\n  }\r\n}\r\n\r\n\r\n "]},"metadata":{},"sourceType":"module"}