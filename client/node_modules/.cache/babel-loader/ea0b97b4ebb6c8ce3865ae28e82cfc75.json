{"ast":null,"code":"import { takeEvery, takeLatest, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  const collectionRef = firestore.collection('collections');\n  console.log('hellos');\n\n  try {\n    const snapShot = yield collectionRef.get();\n    console.log(snapShot);\n    const collectionMap = yield call(convertCollectionsSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* onfetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["C:/Users/Admin/crwn-clothing/client/src/redux/shop/shop.saga.js"],"names":["takeEvery","takeLatest","call","put","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionsAsync","collectionRef","collection","console","log","snapShot","get","collectionMap","error","message","onfetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,UAAlB,EAA6BC,IAA7B,EAAmCC,GAAnC,QAA6C,oBAA7C;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,+BAAT,EAA0CC,SAA1C,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAEA,OAAO,UAAUC,qBAAV,GAAiC;AAChC,QAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMJ,aAAa,CAACK,GAAd,EAAvB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,UAAME,aAAa,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAiCS,QAAjC,CAAhC;AAEA,UAAMX,GAAG,CAACK,uBAAuB,CAACQ,aAAD,CAAxB,CAAT;AACH,GAND,CAMC,OAAMC,KAAN,EAAY;AACT,UAAMd,GAAG,CAACI,uBAAuB,CAACU,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AACR;AAED,OAAO,UAAUC,uBAAV,GAAmC;AACtC,QAAMlB,UAAU,CAACG,eAAe,CAACgB,sBAAjB,EAAyCX,qBAAzC,CAAhB;AACH","sourcesContent":["import {takeEvery,takeLatest,call, put} from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\nimport { convertCollectionsSnapshotToMap, firestore } from '../../firebase/firebase.utils';\r\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.actions';\r\n\r\nexport function* fetchCollectionsAsync(){\r\n        const collectionRef = firestore.collection('collections');\r\n        console.log('hellos')\r\n        try{\r\n            const snapShot = yield collectionRef.get()\r\n            console.log(snapShot)\r\n            const collectionMap = yield call(convertCollectionsSnapshotToMap,snapShot)\r\n\r\n            yield put(fetchCollectionsSuccess(collectionMap))\r\n        }catch(error){\r\n            yield put(fetchCollectionsFailure(error.message))\r\n        }\r\n} \r\n\r\nexport function* onfetchCollectionsStart(){\r\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}