{"ast":null,"code":"import { all, call, takeLatest, put } from \"redux-saga/effects\";\nimport { auth, createUserProfileDocument, firestore, getCurrentUser, provider } from \"../../firebase/firebase.utils\";\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpSuccess, signUpFailure } from \"./user.actions\";\nimport UserActionTypes from \"./user.types\";\nexport function* getSnapshotFromUserAuth(user, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, user, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess(userSnapshot.data()));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(provider);\n    console.log(user);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    console.log(displayName);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error.message));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const user = yield getCurrentUser();\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOut() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUp() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSaga() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOut), call(onSignUp), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["C:/Users/Admin/crwn-clothing/client/src/redux/user/user.saga.js"],"names":["all","call","takeLatest","put","auth","createUserProfileDocument","firestore","getCurrentUser","provider","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpSuccess","signUpFailure","UserActionTypes","getSnapshotFromUserAuth","user","additionalData","userRef","userSnapshot","get","data","error","signInWithGoogle","signInWithPopup","console","log","signOut","message","signUp","payload","email","password","displayName","createUserWithEmailAndPassword","signInAfterSignUp","isUserAuthenticated","signInWithEmail","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOut","SIGN_OUT_START","onSignUp","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSaga"],"mappings":"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","sourcesContent":["import { all, call,takeLatest,put } from \"redux-saga/effects\";\r\nimport { auth,createUserProfileDocument,firestore,getCurrentUser,provider } from \"../../firebase/firebase.utils\";\r\nimport { signInSuccess,signInFailure ,signOutFailure,signOutSuccess,signUpSuccess, signUpFailure} from \"./user.actions\";\r\nimport UserActionTypes from \"./user.types\";\r\n\r\nexport function* getSnapshotFromUserAuth(user,additionalData){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument,user,additionalData)\r\n        const userSnapshot =yield userRef.get()\r\n        yield put(signInSuccess(userSnapshot.data()))\r\n    }catch(error){\r\n        yield(put(signInFailure(error)))\r\n    }\r\n}\r\n\r\nexport function* signInWithGoogle(){\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(provider)\r\n        console.log(user)\r\n        yield getSnapshotFromUserAuth(user)       \r\n    }catch(error){\r\n        yield(put(signInFailure(error)))\r\n    }\r\n}\r\n\r\n\r\nexport function * signOut(){\r\n    try{\r\n        yield auth.signOut()\r\n        yield put(signOutSuccess())\r\n    }catch(error){\r\n        yield put(signOutFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function * signUp({payload:{email,password,displayName}}){\r\n    try{\r\n        const {user} = yield auth.createUserWithEmailAndPassword(email,password) \r\n        console.log(displayName)\r\n        yield put(signUpSuccess({user,additionalData:{displayName}}))\r\n    }catch(error){\r\n        yield put(signUpFailure(error.message))\r\n    }\r\n}\r\n\r\nexport function * signInAfterSignUp({payload:{user,additionalData}}){\r\n    yield getSnapshotFromUserAuth(user,additionalData)\r\n}\r\n\r\n\r\n\r\nexport function * isUserAuthenticated(){\r\n    try{\r\n        const user = yield getCurrentUser()\r\n        yield getSnapshotFromUserAuth(user)\r\n    }catch(error){\r\n        yield put(signInFailure(error))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function * signInWithEmail({payload:{email,password}}){\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email,password)\r\n        yield getSnapshotFromUserAuth(user)         \r\n    }catch(error){\r\n        yield(put(signInFailure(error)))\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart() {\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n  \r\nexport function* onEmailSignInStart() {\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n  \r\nexport function * onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,isUserAuthenticated)\r\n} \r\n\r\nexport function * onSignOut(){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut)\r\n}\r\n\r\nexport function *onSignUp(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp)\r\n}\r\n\r\nexport function * onSignUpSuccess(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,signInAfterSignUp)\r\n}\r\n\r\nexport function * userSaga(){\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(onCheckUserSession),\r\n        call(onSignOut),\r\n        call(onSignUp),\r\n        call(onSignUpSuccess)\r\n    ])\r\n}"]},"metadata":{},"sourceType":"module"}