{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyAXeTJ6xiVHgT2Y1Rx2x2Ca5Bia1UJrIMQ\",\n  authDomain: \"crwn-clothing-a7d8b.firebaseapp.com\",\n  databaseURL: \"https://crwn-clothing-a7d8b-default-rtdb.firebaseio.com\",\n  projectId: \"crwn-clothing-a7d8b\",\n  storageBucket: \"crwn-clothing-a7d8b.appspot.com\",\n  messagingSenderId: \"491727567792\",\n  appId: \"1:491727567792:web:2bec14eea62c00207e7475\",\n  measurementId: \"G-Q0J76KN0X8\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.collection('users').doc(userAuth.uid);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      unsubscribe();\n      resolve(user);\n    }, reject);\n  });\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport default firebase;","map":{"version":3,"sources":["C:/Users/Admin/crwn-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","collection","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","user","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","provider","GoogleAuthProvider","setCustomParameters","prompt"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config ={\r\n  apiKey: \"AIzaSyAXeTJ6xiVHgT2Y1Rx2x2Ca5Bia1UJrIMQ\",\r\n  authDomain: \"crwn-clothing-a7d8b.firebaseapp.com\",\r\n  databaseURL: \"https://crwn-clothing-a7d8b-default-rtdb.firebaseio.com\",\r\n  projectId: \"crwn-clothing-a7d8b\",\r\n  storageBucket: \"crwn-clothing-a7d8b.appspot.com\",\r\n  messagingSenderId: \"491727567792\",\r\n  appId: \"1:491727567792:web:2bec14eea62c00207e7475\",\r\n  measurementId: \"G-Q0J76KN0X8\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n  if (!userAuth) return;\r\n  const userRef = firestore.collection('users').doc(userAuth.uid);\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n    try {  \r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n      });\r\n    } catch (error) {\r\n      console.log('error creating user', error.message);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n};\r\n\r\nexport const getCurrentUser= () =>{\r\n    return new Promise((resolve,reject)=>{\r\n      const unsubscribe = auth.onAuthStateChanged(user=>{\r\n        unsubscribe()\r\n        resolve(user)\r\n      },reject )\r\n    });\r\n}\r\n\r\nexport const addCollectionAndDocuments = async (\r\n  collectionKey,\r\n  objectsToAdd\r\n) => {\r\n\r\n  const collectionRef = firestore.collection(collectionKey);\r\n\r\n  const batch = firestore.batch();\r\n  objectsToAdd.forEach((obj) => {\r\n    const newDocRef = collectionRef.doc();\r\n    batch.set(newDocRef, obj);\r\n  });\r\n  return await batch.commit();\r\n};\r\n\r\nexport const convertCollectionsSnapshotToMap = (collections) => {\r\n  const transformedCollection = collections.docs.map((doc) => {\r\n    const { title, items } = doc.data();\r\n    return {\r\n      routeName: encodeURI(title.toLowerCase()),\r\n      id: doc.id,\r\n      title,\r\n      items,\r\n    }\r\n  });\r\n  return transformedCollection.reduce((accumulator, collection) => {\r\n    accumulator[collection.title.toLowerCase()] = collection;\r\n    return accumulator;\r\n  }, {}); \r\n};\r\n\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({ prompt: 'select_account'});\r\n\r\nexport default firebase;\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}